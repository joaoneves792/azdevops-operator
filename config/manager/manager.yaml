apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: azdevops-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: azdevops-operator
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      imagePullSecrets:
      - name: harbor-pull-secret
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        #image: harbor.warpenguin.dev/library/azdevops-operator:1
        image: azdevops-operator:1
        imagePullPolicy: Never
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: harbor-creds
spec:
  refreshInterval: 1h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "{{ .secret | toString }}"
    name: harbor-pull-secret
    creationPolicy: Owner
  data:
  - secretKey: secret
    remoteRef:
      key: k8s/harbor/dockerconfig
      property: config
