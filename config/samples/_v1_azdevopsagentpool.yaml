apiVersion: vortal.biz/v1
kind: AzDevopsAgentPool
metadata:
  labels:
    app.kubernetes.io/name: azdevopsagentpool
    app.kubernetes.io/instance: azdevopsagentpool-sample
    app.kubernetes.io/part-of: azdevops-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: azdevops-operator
  name: mypool
spec:
  project:
    url: "https://dev.azure.com/ORGANIZATION/"
    poolName: "myPool"
    PATSecretRef: "azdevops-token"  
  autoscaling:
    min: 2
    max: 4
    schedule:
      scaleup: "09:00"
      scaledown: "19:00"
      tz: "Europe/Lisbon"
      skipweekends: true
  template:
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: agent-init
          image: busybox:latest #replace with an image containg the agent
          args: 
          - "/bin/bash"
          - "-c"
          - "cp /azp/start.sh /mnt"
          volumeMounts:
          - mountPath: /mnt
            name: workspace
      containers:
        - name: selfhosted-agents
          image: busybox:latest #replace with an image containg the agent
          args:
          - "/bin/sh"
          - "-c"
          - "tail -f /dev/null" 
          resources:
            requests:
              cpu: "1000m"
              ephemeral-storage: 10Gi
              memory: "4Gi"
            limits:
              cpu: "4000m"
              ephemeral-storage: 10Gi
              memory: "12Gi"
          env:
            - name: AZP_POOL
              value: "" #Replace with the name of your pool
            - name: AZP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: azdevops-token
                  key: token
            - name: AZP_URL
              value: "" #Replace with the url of your organization
            - name: DOCKER_TLS_CERTDIR
              value: /certs
            - name: DOCKER_HOST
              value: tcp://localhost:2376
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: DOCKER_CERT_PATH
              value: /certs/client
          volumeMounts:
          - mountPath: /azp
            name: workspace
          - mountPath: /certs
            name: docker-certs
          - mountPath: /var/run
            name: var-run
        - name: docker
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
          image: docker:23.0.1-dind
          resources:
            limits:
              cpu: "1000m"
              ephemeral-storage: 10Gi
              memory: "8Gi"
            requests:
              cpu: "100m"
              ephemeral-storage: 5Gi
              memory: "100Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/docker
              name: docker-storage
            - mountPath: /certs
              name: docker-certs
            - mountPath: /azp
              name: workspace
            - mountPath: /var/run
              name: var-run
      volumes:
        - emptyDir: {}
          name: workspace
        - emptyDir: {}
          name: docker-storage
        - emptyDir: {}
          name: docker-certs
        #Unfortunatelly azure-devops-pipeline agent has a hardcoded check on /var/run/docker.sock, so we need to have it on the host container :/
        #See src/Agent.Worker/ContainerOperationProvider.cs:657 @tag v2.217.2
        - emptyDir: {}
          name: var-run 
